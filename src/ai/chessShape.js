// 基本棋型：长连，连五，活四，冲四（眠四），活三，眠三，活二，眠二，活一，眠一
// 下一子成活 n 就是活 n-1，能成眠 n 就是眠 n-1
// 死四、死三、死二不加入基本棋型里

// 1、2分别代表棋子  0代表空位
// 连五：11111
// 活四：011110
// 冲四：211110  11101  11011
// 活三：011100  011010
// 眠三：211100  211010  210110  11001  10101  2011102
// 活二：001100  011000  001010  010010
// 眠二：211000  210100  210010  10001  2001102  2010102
// 活一：001000  010000
// 眠一：210000  2010002  2001002

// 组合棋型单独给分数 比如双冲四、双活三、冲四活三这些大概率必胜的组合棋型，以及活三眠三、双活二、活二眠二
// 111010111 双冲四
// 111010011 冲四眠三   111010101冲四眠三  111010110冲四眠三

// 加上所有非对称棋型的反向情况，暂时只统计三种必杀的组合棋型： 双冲四、双活三、冲四活三
const CHESS_SHAPES = {
  FIVE: '11111',
  FOUR: '011110',
  BLOCKED_FOUR: ['211110', '011112', '11101', '10111', '11011'],
  THREE: ['011100', '001110', '011010', '010110'],
  BLOCKED_THREE: ['211100', '001112', '211010', '010112', '210110', '011012', '11001', '10011', '10101', '2011102'],
  TWO: ['001100', '011000', '000110', '001010', '010100', '010010'],
  BLOCKED_TWO: ['211000', '000112', '210100', '001012', '210010', '010012', '10001', '2001102', '2011002', '2010102'],
  ONE: ['001000', '000100', '010000', '000010'],
  BLOCKED_ONE: ['210000', '000012', '2010002', '2000102', '2001002'],
  
  DOUBLE_BLOCKED_FOUR: ['111010111', '111011011', '110111011', '111011110', '101111110', '110111110'],
  DOUBLE_THREE: ['110101011']
}

export default CHESS_SHAPES

// 111011011   1110 1 1101
// 9个格子所有活四的情（一个活四）： 011110000 001111000 000111100  000011110
// 001110000  000111000 000011100 


// 0000 1 0000
// 0001 1 0000